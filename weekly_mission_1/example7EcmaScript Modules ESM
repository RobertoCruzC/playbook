package.json

{
  "name": "esm-syntax",
  "version": "1.0.0",
  "description": "",
  "main": "main.js",
  "type": "module",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "keywords": [],
  "author": "",
  "license": "ISC"
}
logger.js

/*
  Este modulo se comporta como si fuera un objeto que contiene todo lo definido

  [Module: null prototype] {
    DEFAULT_LEVEL: 'info',
    LEVELS: { error: 0, debug: 1, warn: 2, data: 3, info: 4, verbose: 5 },
    Logger: [class Logger],
    log: [Function: log]
  }

*/

// exports a function
export function log (message) {
  console.log(message)
}

// exports a constant
export const DEFAULT_LEVEL = 'info'

// exports an object
export const LEVELS = {
  error: 0,
  debug: 1,
  warn: 2,
  data: 3,
  info: 4,
  verbose: 5
}

// exports a class
export class Logger {
  constructor (name) {
    this.name = name
  }

  log (message) {
    console.log(`[${this.name}] ${message}`)
  }
}
main_module.js

/* Importando el m√≥dulo */
import * as loggerModule from './logger.js'

console.log(loggerModule)
main.js

import * as loggerModule from './logger.js'

console.log(loggerModule)
main_2.js

import { log } from './logger.js'

log('Hello world')
